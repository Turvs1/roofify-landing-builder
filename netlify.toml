
# Netlify configuration file

[build]
  publish = "dist"
  command = "npm run build"

# Serve sitemap.xml as static file
[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Content-Type = "text/xml"

# Long-term caching for versioned assets (JS, CSS with hashes)
[[headers]]
  for = "/assets/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "application/javascript"

[[headers]]
  for = "/assets/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Content-Type = "text/css"

# Long-term caching for static images and media
[[headers]]
  for = "/lovable-uploads/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/profile-images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/project-images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/team-images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/color-swatches/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"

# Medium-term caching for other static assets
[[headers]]
  for = "*.pdf"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "application/pdf"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=86400"
    Content-Type = "image/svg+xml"

# Short-term caching for HTML and other dynamic content
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "text/html"

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Handle SPA routing by redirecting all requests to index.html
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
